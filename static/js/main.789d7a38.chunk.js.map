{"version":3,"sources":["Routes/home.js","Routes/experiment.js","Routes/questions/QuestionPresenter.js","Routes/questions/index.js","Routes/questions/QuestionContainer.js","Components/GlobalStyles.js","Routes/Aws.js","Components/Header.js","Components/Router.js","Components/App.js","index.js"],"names":["Container","styled","div","Game_Info","Mission","Button_Container","Start","button","Extra","render","to","Component","UserInfo","Quest","Form_","form","Info","input","Select","select","Submit","QuestionPresenter","age","sex","country","chickenGame","handleChange","handleSubmit","onSubmit","required","placeholder","onChange","value","name","type","QuestionContainer","state","e","target","setState","preventDefault","console","log","globalStyles","createGlobalStyle","reset","dotenv","config","Aws","props","mturkAccountBalance","this","getAccountBalance","AWS","update","accessKeyId","process","secretAccessKey","region","MTurk","endpoint","err","data","warn","balance","AvailableBalance","accountBalanceToDisplay","className","method","id","action","cols","rows","language","Header","header","List","ul","Item","li","Slink","Link","path","exact","component","Home","questions","experiment","from","App","Router","GlobalStyles","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.789d7a38.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst Container = styled.div`\n  width: 100%;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Game_Info = styled.div`\n  padding: 18px;\n  font-size: 18px;\n  display: block;\n  text-align: center;\n  width: 100%;\n  line-height: 30px;\n`;\n\nconst Mission = styled.div`\n  padding-top: 30px;\n  display: block;\n  text-align: center;\n  font-size: 25px;\n  font-weight: 600;\n  color: #ffcc00;\n`;\n\nconst Button_Container = styled.div`\n  padding: 30px;\n  text-align: center;\n`;\n\nconst Start = styled.button`\n  padding: 10px 15px;\n  background-color: #ffcc00;\n  border-radius: 8px;\n  border-style: none;\n  color: rgba(0, 0, 0, 0.9);\n  text-align: center;\n  font-size: 30px;\n  font-weight: 900;\n`;\n\nconst Extra = styled.div`\n  margin-top: 50px;\n  text-align: center;\n  display: block;\n  width: 70%;\n  padding: 15px;\n  color: rgba(255, 255, 255, 0.8);\n  font-size: 15px;\n  line-height: 20px;\n`;\n\nexport default class extends Component {\n  render = () => {\n    return (\n      <Container>\n        <Game_Info>\n          <p>\n            This game is for 3 persons batting game.<br></br>\n            What we want to see is your behavior pattern especially related to\n            chicken game.\n          </p>\n        </Game_Info>\n        <Mission>Your Mission is Being Winner.</Mission>\n        <Button_Container>\n          <Link to=\"/questions\">\n            <Start> Let's Start</Start>\n          </Link>\n        </Button_Container>\n        <Game_Info>\n          Only winner can get extra reward which is proportional to gap between\n          other competitors.\n        </Game_Info>\n        <Extra>\n          * What is Chicken game?\n          <br></br>\n          <br></br>\n          The game of chicken, also known as the hawk–dove game or snowdrift\n          game, is a model of conflict for two players in game theory. The\n          principle of the game is that while the outcome is ideal for one\n          player to yield, but the individuals try to avoid it out of pride for\n          not wanting to look like a 'chicken'. So each player taunts the other\n          to increase the risk of shame in yielding. However, when one player\n          yields, the conflict is avoided, and the game is for the most part\n          over.\n        </Extra>\n      </Container>\n    );\n  };\n}\n","export default () => \"experiment\";\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst UserInfo = styled.div`\n  padding: 20px;\n  display: block;\n  text-align: center;\n  font-size: 20px;\n  font-weight: 400;\n`;\n\nconst Quest = styled.div``;\n\nconst Form_ = styled.form`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n`;\n\nconst Info = styled.input`\n  width: 300px;\n  padding: 10px 5px;\n  background-color: rgba(255, 255, 255, 0.9);\n  border-radius: 8px;\n  border-style: none;\n  color: black;\n  text-align: center;\n  font-size: 15px;\n  font-weight: 400;\n  margin-bottom: 20px;\n`;\n\nconst Select = styled.select`\n  width: 300px;\n  padding: 10px 5px;\n  background-color: rgba(255, 255, 255, 0.9);\n  border-radius: 8px;\n  border-style: none;\n  color: black;\n  text-align: center;\n  font-size: 15px;\n  font-weight: 400;\n  margin-bottom: 20px;\n`;\n\nconst Submit = styled.button`\n  width: 300px;\n  padding: 10px 5px;\n  background-color: #ffcc00;\n  border-radius: 8px;\n  border-style: none;\n  color: black;\n  text-align: center;\n  font-size: 20px;\n  font-weight: 700;\n`;\n\nconst Button_Container = styled.div`\n  text-align: center;\n`;\n\nconst QuestionPresenter = ({\n  age,\n  sex,\n  country,\n  chickenGame,\n  handleChange,\n  handleSubmit,\n}) => (\n  <Container>\n    <UserInfo>Let me know who you are!</UserInfo>\n    <Form_ onSubmit={handleSubmit}>\n      <Quest>\n        <Info\n          required\n          placeholder=\"Age\"\n          onChange={handleChange}\n          value={age}\n          name=\"age\"\n        ></Info>\n      </Quest>\n      <Quest>\n        <Info\n          required\n          placeholder=\"Country\"\n          onChange={handleChange}\n          value={country}\n          name=\"country\"\n        ></Info>\n      </Quest>\n      <Quest>\n        <Select\n          required\n          placeholder=\"Male/Female\"\n          onChange={handleChange}\n          value={sex}\n          name=\"sex\"\n        >\n          <option>Select your gender</option>\n          <option>Male</option>\n          <option>Female</option>\n        </Select>\n      </Quest>\n      <Quest>\n        <Select\n          required\n          placeholder=\"Have you heard about chicken game?\"\n          onChange={handleChange}\n          value={chickenGame}\n          name=\"chickenGame\"\n        >\n          <option>Have you heard about chicken game?</option>\n          <option>Yes</option>\n          <option>No</option>\n        </Select>\n      </Quest>\n      <Button_Container>\n        <Submit type=\"submit\">Game Start</Submit>\n      </Button_Container>\n    </Form_>\n  </Container>\n);\n\nQuestionPresenter.propTypes = {\n  age: PropTypes.number.isRequired,\n  sex: PropTypes.string.isRequired,\n  country: PropTypes.string.isRequired,\n  chickenGame: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n};\n\nexport default QuestionPresenter;\n","import QuestionContainer from \"./QuestionContainer\";\n\nexport default QuestionContainer;\n","import React, { Component } from \"react\";\nimport QuestionPresenter from \"./QuestionPresenter\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nexport default class extends Component {\n  state = {\n    age: null,\n    sex: null,\n    country: null,\n    chickenGame: null,\n  };\n\n  handleChange = (e) => {\n    const {\n      target: { value, name },\n    } = e;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    // 페이지 리로딩 방지\n    e.preventDefault();\n    // 상태값을 onCreate 를 통하여 부모에게 전달\n    console.log(this.state);\n    // 상태 초기화\n    this.setState({\n      age: \"\",\n      sex: \"\",\n      country: \"\",\n      chickenGame: \"\",\n    });\n  };\n\n  render = () => {\n    const { age, sex, country, chickenGame } = this.state;\n    return (\n      <QuestionPresenter\n        age={age}\n        sex={sex}\n        country={country}\n        chickenGame={chickenGame}\n        handleChange={this.handleChange}\n        handleSubmit={this.handleSubmit}\n      />\n    );\n  };\n}\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration: none;\n        color: inherit;\n    }\n    *{\n        box-sizing: border-box;\n    }\n    body{\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size: 14px;\n        background-color: rgba(30,30,30,1);\n        color: white;\n        padding-top: 70px;\n    }\n    select{\n        width: 300px;\n  padding: 10px 5px;\n  background-color: rgba(255, 255, 255, 0.9);\n  border-radius: 8px;\n  border-style: none;\n  color: black;\n  text-align: center;\n  font-size: 15px;\n  font-weight: 400;\n  margin-bottom: 20px;\n\n    }\n`;\n\nexport default globalStyles;\n","import React, { Component } from \"react\";\nimport GlobalStyles from \"Components/GlobalStyles\";\nimport AWS from \"aws-sdk\";\nimport dotenv from \"dotenv\";\ndotenv.config();\n\nclass Aws extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mturkAccountBalance: null,\n    };\n  }\n\n  componentDidMount() {\n    this.getAccountBalance();\n  }\n\n  getAccountBalance() {\n    AWS.config.update({\n      accessKeyId: process.env.REACT_APP_AWS_KEY,\n      secretAccessKey: process.env.REACT_APP_AWS_SECRET_KEY,\n      region: \"us-east-1\",\n    });\n\n    const endpoint = \"https://mturk-requester-sandbox.us-east-1.amazonaws.com\";\n\n    const mTurkClient = new AWS.MTurk({ endpoint: endpoint });\n    mTurkClient.getAccountBalance((err, data) => {\n      if (err) {\n        console.warn(\"Error making the mTurk API call:\", err);\n      } else {\n        // The call was a success\n        const balance = `$${data.AvailableBalance}`;\n        this.setState({ mturkAccountBalance: balance });\n      }\n    });\n  }\n  render() {\n    var accountBalanceToDisplay = \"loading...\";\n    if (this.state.mturkAccountBalance != null) {\n      accountBalanceToDisplay = this.state.mturkAccountBalance;\n    }\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n          <h1 className=\"App-title\">Welcome to my MTurk application</h1>\n        </header>\n        <p className=\"App-intro\">\n          Your account balance is {accountBalanceToDisplay}\n        </p>\n        <form\n          name=\"mturk_form\"\n          method=\"post\"\n          id=\"mturk_form\"\n          action=\"https://www.mturk.com/mturk/externalSubmit\"\n        >\n          <input type=\"hidden\" value=\"\" name=\"assignmentId\" id=\"assignmentId\" />\n          <h1>What's up?</h1>\n          <p>\n            <textarea name=\"comment\" cols=\"80\" rows=\"3\"></textarea>\n          </p>\n          <p>\n            <input type=\"submit\" id=\"submitButton\" value=\"Submit\" />\n          </p>\n        </form>\n        <script language=\"Javascript\">turkSetAssignmentID();</script>\n      </div>\n    );\n  }\n}\n\nexport default Aws;\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\"; // link에 해당하는 페이지가 내 어플리케이션에 있으면 브라우저 접근방식이 아닌 자바스크립트 방식으로 가게 해줌.\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 60px;\n  font-weight: 600;\n  font-size: 24px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: rgba(30, 30, 30, 1);\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.6);\n  z-index: 1;\n`;\n\nconst List = styled.ul``;\n\nconst Item = styled.li``;\nconst Slink = styled(Link)`\n  height: 50px;\n`;\n// Link 를 쓸 경우는 href 대신에 to를 쓸 것.\n\nexport default () => (\n  <Header>\n    <List>\n      <Item>\n        <Slink to=\"/\">N Person's Chicken Game</Slink>\n      </Item>\n    </List>\n  </Header>\n);\n","import React from \"react\";\nimport { HashRouter as Router, Route, Redirect } from \"react-router-dom\";\nimport Home from \"Routes/home\";\nimport experiment from \"Routes/experiment\";\nimport questions from \"Routes/questions\";\nimport Aws from \"Routes/Aws\";\nimport Header from \"Components/Header\";\n\nexport default () => (\n  <Router>\n    <>\n      <Header />\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/questions\" exact component={questions} />\n      <Route path=\"/experiment\" exact component={experiment} />\n      <Route path=\"/Aws\" exact component={Aws} />\n      <Redirect from=\"*\" to=\"/\" />\n    </>\n  </Router>\n);\n","import React, { Component } from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    ); // 원래 하나만 리턴할 수 있는데 <> </>를 쓰면 중복 리턴 가능함.\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}